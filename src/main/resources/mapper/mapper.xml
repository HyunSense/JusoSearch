<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jusosearch.mapper.UserMapper">

    <select id="findByUserName" parameterType="java.lang.String" resultType="jusosearch.dto.User">
        SELECT id, password, name, email, provider, provider_id
             FROM tb_user
            WHERE id = #{id}
    </select>

    <!-- 검색 이력 저장 -->
    <insert id="saveAddr" parameterType="java.lang.String">
        INSERT INTO tb_srch_his
            (id, srched_addr)
        VALUES
            (#{id}, #{address})
    </insert>

    <!-- 검색 이력 조회 -->
    <select id="searchList" parameterType="java.lang.String" resultType="jusosearch.dto.SearchHistory">
        SELECT srch_time AS srchTime, srched_addr AS srchedAddr
            FROM tb_srch_his
           WHERE id = #{id}
    </select>

    <!-- 검색 이력 조회 -->
    <select id="findAddressHistoryById" parameterType="map" resultType="jusosearch.dto.SearchHistory">
        SELECT id,srch_time, srched_addr
        FROM tb_srch_his
        WHERE id = #{id} ORDER BY srch_time DESC LIMIT #{index}, 5
    </select>

    <!-- 토탈 페이지를 구하기 위한 검색 이력 전체 수 -->
    <select id="countAllById" parameterType="String" resultType="int">
        select count(srched_addr) from tb_srch_his where id = #{id}
    </select>

    <!-- 특정 검색 이력 삭제 -->
    <delete id="delete" parameterType="java.lang.String">
        DELETE FROM tb_srch_his
        WHERE srch_time = #{srch_time}
    </delete>

    <!-- 전체 검색 이력 삭제 -->
    <delete id="deleteAll">
        DELETE FROM tb_srch_his
    </delete>

    <!-- 아이디 중복 확인용 -->
    <select id="selectOneById" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT count(*)
            FROM tb_user
           WHERE id = #{id}
    </select>

    <!-- OAuth2 추가 쿼리 -->
    <insert id="save" parameterType="jusosearch.dto.User">
        insert into tb_user
            (id, password, name, email, provider, provider_id)
        values
            (#{id}, #{password}, #{name}, #{email}, #{provider}, #{providerId})
    </insert>

    <select id="findUserByUserName" parameterType="java.lang.String" resultType="jusosearch.dto.User">
        select
            id, password, name, email, provider, provider_id
        from tb_user
        where id = #{userName}
    </select>
</mapper>